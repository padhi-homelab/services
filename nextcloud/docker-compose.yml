version: '2.4'

networks:
  proxy:
    external: true

services:
  mariadb:
    hostname: mariadb
    # FIXME: Nextcloud doesn't work with MariaDB 11+ yet
    # See https://help.nextcloud.com/t/nexcloud-27-with-mariadb-11-0-2-stopped-working/165988
    image: mariadb:10.11.6
    restart: unless-stopped

    security_opt:
    # NOTE: Do NOT add a [space] before `true` below.
    - no-new-privileges:true
    user: ${USER_ID:?}

    command: |-
      --transaction-isolation=READ-COMMITTED
      --binlog-format=ROW
      --innodb-file-per-table=1
      --skip-innodb-read-only-compressed
      --character-set-server=utf8mb4
      --collation-server=utf8mb4_unicode_ci

    networks:
    - default
    volumes:
    - ./data/mariadb/var/lib/mysql:/var/lib/mysql:rw

    env_file:
    - env/mariadb
    environment:
      MARIADB_AUTO_UPGRADE: 1
      MYSQL_INITDB_SKIP_TZINFO: 1
      MYSQL_RANDOM_ROOT_PASSWORD: 1

    healthcheck:
      test: "mysql $$MYSQL_DATABASE -u$$MYSQL_USER -p$$MYSQL_PASSWORD -e 'SELECT 1;'"
      interval: 15s
      start_period: 10s

  redis:
    hostname: redis
    image: redis:7.4.0
    restart: unless-stopped

    security_opt:
    # NOTE: Do NOT add a [space] before `true` below.
    - no-new-privileges:true
    user: ${USER_ID:?}

    command: |-
      sh -c 'exec redis-server --requirepass "$${REDIS_HOST_PASSWORD}"'

    networks:
    - default
    volumes:
    - ./data/redis/data:/data:rw

    env_file:
    - env/redis
    environment:
      TZ: ${TZ:?}

    healthcheck:
      test: "redis-cli ping"
      interval: 15s
      start_period: 10s

  imaginary:
    hostname: imaginary
    image: nextcloud/aio-imaginary:20240808_083748
    restart: unless-stopped

    cap_add:
    - SYS_NICE
    security_opt:
    # NOTE: Do NOT add a [space] before `true` below.
    - no-new-privileges:true
    user: ${USER_ID:?}

    command: -cpus 3 -concurrency 16 -enable-url-source

    networks:
    - default

    environment:
      PORT: 9000
      TZ: ${TZ:?}

    healthcheck:
      test: "pgrep imaginary"
      interval: 15s
      timeout: 3s
      start_period: 5s

  nextcloud:
    hostname: nextcloud
    image: nextcloud:29.0.5
    restart: unless-stopped

    security_opt:
    # NOTE: Do NOT add a [space] before `true` below.
    - no-new-privileges:true
    user: ${USER_ID:?}

    depends_on:
    - mariadb
    - redis

    networks:
    - default
    - proxy
    volumes:
    - ./config/nextcloud/cron.sh:/cron.sh:ro
    - ./config/nextcloud/push.sh:/push.sh:ro
    - ./data/nextcloud/data:/data:rw
    - ./data/nextcloud/var/www/html:/var/www/html:rw
    # NOTE: Expose `crontabs` to allow for adding or removing cron jobs
    - ./data/nextcloud/crontabs:/crontabs:rw
    # FIXME: See https://github.com/nextcloud/docker/issues/1667
    - /dev/null:/var/log/apache2/access.log:rw
    - /dev/null:/var/log/apache2/other_vhosts_access.log:rw
    # FIXME: See https://github.com/nextcloud/docker/issues/763#issuecomment-1007447212
    - ./data/nextcloud/usr/local/etc/php/conf.d/redis-session.ini:/usr/local/etc/php/conf.d/redis-session.ini:rw
    # FIXME: See https://github.com/nextcloud/docker/issues/1494#issuecomment-1213540687
    - ./data/nextcloud/etc/apache2/conf-enabled/remoteip.conf:/etc/apache2/conf-enabled/remoteip.conf:ro

    env_file:
    - env/mariadb
    - env/redis
    - env/nextcloud
    environment:
      TZ: ${TZ:?}
      NEXTCLOUD_TRUSTED_DOMAINS: ${SERVER_WAN_FQDN:?} ${SERVER_LAN_FQDN:?} nextcloud

    healthcheck:
      test: "curl -fso /dev/null http://localhost:80"
      interval: 15s
      timeout: 3s
      start_period: 15s

  push:
    hostname: push
    image: nextcloud:29.0.5
    restart: unless-stopped

    security_opt:
    # NOTE: Do NOT add a [space] before `true` below.
    - no-new-privileges:true
    user: ${USER_ID:?}

    entrypoint: /push.sh

    depends_on:
    - nextcloud

    networks:
    - default
    - proxy
    volumes_from:
    - nextcloud:rw

    env_file:
    - env/mariadb
    - env/redis
    - env/nextcloud
    environment:
      TZ: ${TZ:?}
      NEXTCLOUD_URL: http://nextcloud/
    
    healthcheck:
      test: "pgrep notify_push"
      interval: 15s
      timeout: 3s
      start_period: 5s

  cron:
    hostname: cron
    image: nextcloud:29.0.5
    restart: unless-stopped
    entrypoint: /cron.sh

    security_opt:
    # NOTE: Do NOT add a [space] before `true` below.
    - no-new-privileges:true
    # FIXME: `crond` needs to run as `root` user.
    # user: ${USER_ID:?}

    depends_on:
    - nextcloud

    networks:
    - default
    volumes_from:
    - nextcloud:rw

    env_file:
    - env/mariadb
    - env/redis
    - env/nextcloud
    environment:
      TZ: ${TZ:?}
      # FIXME: See note in config/nextcloud/cron.sh
      DOCKER_UID: ${USER_ID:?}
      DOCKER_GID: ${GROUP_ID:?}

    healthcheck:
      test: "pgrep -a busybox | grep crond"
      interval: 15s
      timeout: 3s
      start_period: 5s
